# -*- coding: utf-8 -*-
"""
/***************************************************************************
 ZonalStats
                                 A QGIS plugin
 Calculate indices and extract zonal statistics
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2024-10-11
        git sha              : $Format:%H$
        copyright            : (C) 2024 by USDA ARS FRR
        email                : kaden.patten@usda.gov
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

from qgis.PyQt.QtWidgets import QMessageBox, QLineEdit
import os



class FileEditGPKG(QLineEdit):
    def __init__(self, parent):
        super(FileEditGPKG, self).__init__(parent)

        self.setDragEnabled(True)

    def dragEnterEvent(self, event):
        data = event.mimeData()
        urls = data.urls()
        if urls and urls[0].scheme() == 'file':
            event.acceptProposedAction()

    def dragMoveEvent(self, event):
        data = event.mimeData()
        urls = data.urls()
        if urls and urls[0].scheme() == 'file':
            event.acceptProposedAction()

    def dropEvent(self, event):
        data = event.mimeData()
        urls = data.urls()
        if urls and urls[0].scheme() == 'file':
            filepath = str(urls[0].path())[1:]
            if os.path.isfile(filepath):
                if filepath.lower().endswith('.gpkg'):
                    self.setText(filepath)
                else:
                    dialog = QMessageBox()
                    dialog.setSizeGripEnabled(True)
                    dialog.setWindowTitle("Error: Invalid Input")
                    dialog.setText("Only Geopackage file is accepted")
                    dialog.setIcon(QMessageBox.Warning)
                    dialog.exec_()
            else:
                dialog = QMessageBox()
                dialog.setSizeGripEnabled(True)
                dialog.setWindowTitle("Error: Invalid Input")
                dialog.setText("Only file is accepted")
                dialog.setIcon(QMessageBox.Warning)
                dialog.exec_()